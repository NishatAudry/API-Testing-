{
	"info": {
		"_postman_id": "606e6d50-4c38-4a76-a1b5-3597e4fbc56c",
		"name": "DEMO_API_TESTING",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23051486"
	},
	"item": [
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = pm.response.json();\r",
							"pm.environment.set(\"id\" , jsondata.bookingid);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const moment =require(\"moment\")\r",
							"const today = moment()\r",
							"pm.environment.set(\"checkin\",today.add(0,\"day\").format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today.add(5,\"day\").format(\"YYYY-MM-DD\"))\r",
							"var userName = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
							"pm.environment.set(\"firstname\" , userName)\r",
							"var userName2 = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
							"pm.environment.set(\"lastname\" , userName2)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var code = responseCode.code;\r",
							"var idValue = pm.environment.get(\"id\")\r",
							"console.log(idValue)\r",
							"var jsondata = pm.response.json();\r",
							"pm.environment.set(\"id\" , jsondata.bookingid);\r",
							"console.log(code);\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"            pm.test(\"Status code matched 200\", () => {\r",
							"\r",
							"            });\r",
							"\r",
							"            pm.test(\"First name check\", () => {\r",
							"                console.log(jsonData.booking.firstname);\r",
							"                pm.expect(jsonData.booking.firstname).to.eql(pm.environment.get(\"firstname\"));\r",
							"            });\r",
							"            pm.test(\"Last name check\", () => {\r",
							"                console.log(jsonData.booking.lastname);\r",
							"                pm.expect(jsonData.booking.lastname).to.eql(pm.environment.get(\"lastname\"));\r",
							"            });\r",
							"           \r",
							"            pm.test(\"checkin date check\", () =>{\r",
							"               \r",
							"                pm.expect(jsonData.booking.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
							"                console.log(jsonData.booking.bookingdates.checkin);\r",
							"\r",
							"            });\r",
							"            pm.test(\"checkout date check\", () =>{\r",
							"               \r",
							"                pm.expect(jsonData.booking.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
							"                console.log(jsonData.booking.bookingdates.checkout);\r",
							"\r",
							"            });\r",
							"            pm.test(\"total price check\", () =>{\r",
							"               \r",
							"                pm.expect(jsonData.booking.totalprice).to.eql(111);\r",
							"                console.log(jsonData.booking.totalprice);\r",
							"\r",
							"            });\r",
							"            pm.test(\"deposit paid check\", () =>{\r",
							"               \r",
							"                pm.expect(jsonData.booking.depositpaid).to.eql(true);\r",
							"                console.log(jsonData.booking.depositpaid);\r",
							"\r",
							"            });\r",
							"            pm.test(\"deposit paid check\", () =>{\r",
							"               \r",
							"                pm.expect(jsonData.booking.depositpaid).to.eql(true);\r",
							"                console.log(jsonData.booking.depositpaid);\r",
							"\r",
							"            });\r",
							"\r",
							"            pm.test(\"additional needs check\", () =>{\r",
							"               \r",
							"                pm.expect(jsonData.booking.additionalneeds).to.eql(\"Breakfast\");\r",
							"                console.log(jsonData.booking.additionalneeds);\r",
							"\r",
							"            });\r",
							"\r",
							"             \r",
							"            \r",
							"  \r",
							"    break;\r",
							"    case 201:\r",
							"    pm.test(\"Status code matched 201\", ()=>{\r",
							"\r",
							"    });\r",
							"    break;\r",
							"    default:\r",
							"    pm.test(\"Status doesn't match or invalid\",()=>{\r",
							"\r",
							"    })\r",
							"    \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": " Update Booking",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Names\",\r\n    \"lastname\": \"Brown\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": " DeleteBooking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		}
	]
}